variables:
  TF_VERSION: 0.14.9
<<<<<<< HEAD
  DO_ACCESS_TOKEN: <your digitalocean access token>
  DO_REGION: nyc1
  DO_SIZE: s-1vcpu-1gb
  DO_IMAGE: ubuntu-20-04-x64
  DO_SSH_KEY: <your digitalocean ssh key fingerprint>
  TF_VAR_do_token: $DO_ACCESS_TOKEN
  TF_VAR_do_region: $DO_REGION
  TF_VAR_do_size: $DO_SIZE
  TF_VAR_do_image: $DO_IMAGE
  TF_VAR_do_ssh_key: $DO_SSH_KEY

=======
>>>>>>> 0f6a4715784abaa5db338c8cc98a6767fe03e383

before_script:
  - apt-get update && apt-get install -y unzip
  - curl -LO https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
  - unzip terraform_${TF_VERSION}_linux_amd64.zip
  - mv terraform /usr/local/bin/
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - eval $(ssh-agent -s)
<<<<<<< HEAD
  - ssh-keygen -o -a 100 -t ed25519 -f ~/.ssh/id_ed25519

=======
  - echo "$SSH_PRIV_KEY" | tr -d '\r' | ssh-add -
  
>>>>>>> 0f6a4715784abaa5db338c8cc98a6767fe03e383
stages:
  - plan
  - apply
  - destroy

terraform:
  stage: plan
  script:
    - terraform init
    - terraform validate
    - terraform plan -var-file=terraform.tfvars -out=tfplan
  artifacts:
    paths:
      - tfplan

terraform_apply:
  stage: apply
  script:
    - terraform apply -auto-approve tfplan
  environment:
    name: production

    on_stop: stop_terraform

stop_terraform:
  stage: destroy
  script:
    - terraform destroy -auto-approve
  when: manual
  allow_failure: true
  environment:
    name: production
    action: stop